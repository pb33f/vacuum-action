name: "vacuum OpenAPI Linter and Quality Analysis tool"
description: "Lint and quality check an OpenAPI specification using vacuum, the world's fastest OpenAPI linter"

inputs:
  openapi_path:
    description: "Path to the OpenAPI spec file (relative to repo root, e.g., 'specs/openapi.yaml')"
    required: true
  ruleset:
    description: "Optional ruleset file or URL for vacuum lint (e.g. 'rules/ruleset.yaml')"
    required: false
    default: ""

outputs:
  report:
    description: "Markdown-formatted lint report from vacuum"
    # Note: you do NOT need to repeat 'value:' here; outputs get set by steps.

runs:
  using: "composite"
  steps:
    - name: Lint OpenAPI specification using vacuum
      id: lint
      shell: bash
      run: |
        # Build the Docker command
        CMD="docker run --rm \
          -v ${{ github.workspace }}:/work:ro \
          dshanley/vacuum lint \
          --pipeline-output ${{ inputs.openapi_path }}"
        if [ -n "${{ inputs.ruleset }}" ]; then
          CMD="$CMD --ruleset ${{ inputs.ruleset }}"
        fi
        echo "Running: $CMD"
        report=$($CMD)

        # Expose it as the action output named 'report'
        echo "::set-output name=report::$report"
      env:
        DOCKER_BUILDKIT: 1

    - name: Create or update comment on PR
      if: ${{ github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        issue-number: ${{ github.event.pull_request.number }}
        body-includes: '<!-- vacuum-lint-report -->'
        body: |
          <!-- vacuum-lint-report -->
          ${{ steps.lint.outputs.report }}
        edit-mode: replace